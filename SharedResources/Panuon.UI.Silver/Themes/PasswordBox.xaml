<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static rs:ResourceKeys.PasswordBoxWaitingLoadingStyle}"
           TargetType="{x:Type local:Loading}"
           BasedOn="{StaticResource {x:Type local:Loading}}">
        <Setter Property="Height"
                Value="{Binding FontSize, Converter={StaticResource {x:Static i:ResourceKeys.Add5Converter}},RelativeSource={RelativeSource  AncestorType=PasswordBox},Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding FontSize, Converter={StaticResource {x:Static i:ResourceKeys.Add5Converter}},RelativeSource={RelativeSource  AncestorType=PasswordBox},Mode=OneWay}" />
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
    </Style>

    <Style x:Key="{x:Static rs:ResourceKeys.PasswordBoxClearButtonStyle}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontFamily"
                Value="pack://application:,,,/Panuon.UI.Silver;component/Resources/#iconfont" />
        <Setter Property="Content"
                Value="&#xe621;" />
        <Setter Property="local:ButtonHelper.ButtonStyle"
                Value="Link" />
        <Setter Property="Width"
                Value="{Binding ActualHeight,Converter={StaticResource {x:Static i:ResourceKeys.Minus5Converter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
        <Style.Triggers>
            <Trigger Property="local:ButtonHelper.ButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
                <Setter Property="local:ButtonHelper.HoverBrush"
                        Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static rs:ResourceKeys.PasswordBoxPlainButtonStyle}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontFamily"
                Value="pack://application:,,,/Panuon.UI.Silver;component/Resources/#iconfont" />
        <Setter Property="Content"
                Value="&#xe613;" />
        <Setter Property="local:ButtonHelper.ButtonStyle"
                Value="Link" />
        <Setter Property="Width"
                Value="{Binding ActualHeight,Converter={StaticResource {x:Static i:ResourceKeys.Minus5Converter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
        <Style.Triggers>
            <Trigger Property="local:ButtonHelper.ButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
                <Setter Property="local:ButtonHelper.HoverBrush"
                        Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Content"
                        Value="&#xe687;" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="{x:Static i:ResourceKeys.PasswordBoxTemplate}"
                     TargetType="{x:Type PasswordBox}">
        <Border x:Name="BdrMain"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                CornerRadius="{Binding Path=(local:PasswordBoxHelper.CornerRadius),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ic:IconControl x:Name="IcIcon"
                                Width="{Binding Path=(local:IconHelper.Width),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                Height="{Binding Path=(local:IconHelper.Height),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                MinWidth="{Binding Path=(local:IconHelper.MinWidth),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                MinHeight="{Binding Path=(local:IconHelper.MinHeight),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                MaxWidth="{Binding Path=(local:IconHelper.MaxWidth),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                MaxHeight="{Binding Path=(local:IconHelper.MaxHeight),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                Margin="{Binding Path=(local:IconHelper.Margin),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                Visibility="{Binding Path=(local:PasswordBoxHelper.Icon),Converter={StaticResource {x:Static i:ResourceKeys.NullToCollapseConverter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                Content="{Binding Path=(local:PasswordBoxHelper.Icon),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                <ScrollViewer x:Name="PART_ContentHost"
                              Grid.Column="1"
                              VerticalAlignment="Stretch"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                <TextBlock  x:Name="TxtWatermark"
                            Grid.Column="1"
                            IsHitTestVisible="False"
                            Margin="{TemplateBinding Padding}"
                            Padding="1,0,0,0"
                            Visibility="{Binding Path=(local:PasswordBoxHelper.Password),Converter={StaticResource {x:Static i:ResourceKeys.NullOrEmptyToVisibleConverter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                            Text="{Binding Path=(local:PasswordBoxHelper.Watermark),RelativeSource={RelativeSource AncestorType=PasswordBox}, Mode=OneWay}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Opacity="0.6" />
                <TextBlock  x:Name="TxtPassword"
                            Grid.Column="1"
                            IsHitTestVisible="False"
                            Margin="{TemplateBinding Padding}"
                            Padding="1,0,0,0"
                            Visibility="Collapsed"
                            Text="{Binding Path=(local:PasswordBoxHelper.Password),RelativeSource={RelativeSource AncestorType=PasswordBox}, Mode=OneWay}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                <Button x:Name="BtnPlain"
                        Padding="0,0,0,2"
                        Grid.Column="2"
                        Style="{DynamicResource {x:Static rs:ResourceKeys.PasswordBoxPlainButtonStyle}}"
                        Visibility="{Binding Path=(local:PasswordBoxHelper.CanPlain),Converter={StaticResource {x:Static i:ResourceKeys.BoolToVisibleConverter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
                <Button x:Name="BtnClear"
                        Padding="0,0,0,2"
                        Command="{Binding Path=(local:PasswordBoxHelper.ClearPasswordBoxCommand),RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                        CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                        Grid.Column="3"
                        Style="{DynamicResource {x:Static rs:ResourceKeys.PasswordBoxClearButtonStyle}}"
                        Visibility="{Binding Path=(local:PasswordBoxHelper.CanClear),Converter={StaticResource {x:Static i:ResourceKeys.BoolToVisibleConverter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}" />
                <Border x:Name="BdrWait"
                        Grid.Column="3"
                        Width="{Binding ActualHeight,Converter={StaticResource {x:Static i:ResourceKeys.Minus5Converter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                        Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                        Visibility="Collapsed">
                    <local:Loading x:Name="LoadWait"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Style="{StaticResource {x:Static rs:ResourceKeys.PasswordBoxWaitingLoadingStyle}}" />
                </Border>
                <Grid x:Name="GrdError"
                      Grid.Column="3"
                      Width="{Binding ActualHeight,Converter={StaticResource {x:Static i:ResourceKeys.Minus5Converter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                      Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                      Visibility="Collapsed">
                    <Ellipse Width="{Binding FontSize,Converter={StaticResource {x:Static i:ResourceKeys.Add7Converter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                             Height="{Binding FontSize,Converter={StaticResource {x:Static i:ResourceKeys.Add7Converter}},RelativeSource={RelativeSource AncestorType=PasswordBox},Mode=OneWay}"
                             Margin="0,0,0,2"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             Fill="{DynamicResource {x:Static rs:ResourceKeys.PasswordBoxValidationErrorBrush}}" />
                    <TextBlock Margin="0,0,0,2"
                               Text="&#xe621;"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Foreground="White"
                               FontFamily="pack://application:,,,/Panuon.UI.Silver;component/Resources/#iconfont" />
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="BtnPlain"
                     Property="IsPressed"
                     Value="True">
                <Setter TargetName="PART_ContentHost"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="TxtPassword"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(local:PasswordBoxHelper.Password), Converter={StaticResource {x:Static i:ResourceKeys.IsNullOrEmptyConverter}}, RelativeSource={RelativeSource Self}}"
                         Value="True">
                <Setter TargetName="TxtWatermark"
                        Property="Visibility"
                        Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:PasswordBoxHelper.ValidationErrorTips),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}}"
                         Value="True">
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{DynamicResource {x:Static rs:ResourceKeys.PasswordBoxValidationErrorBrush}}" />
                <Setter TargetName="GrdError"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BdrMain"
                        Property="ToolTip"
                        Value="{Binding Path=(local:PasswordBoxHelper.ValidationErrorTips),RelativeSource={RelativeSource AncestorType=PasswordBox}, Mode=OneWay}" />
            </DataTrigger>
            <Trigger Property="local:PasswordBoxHelper.IsWaiting"
                     Value="True">
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BdrWait"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="LoadWait"
                        Property="IsRunning"
                        Value="True" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type PasswordBox}">
        <!--PasswordBoxHelper-->
        <Setter Property="local:PasswordBoxHelper.PasswordBoxHook"
                Value="True" />
        <Setter Property="local:PasswordBoxHelper.FocusedShadowColor"
                Value="{StaticResource {x:Static i:ResourceKeys.PasswordBoxFocusedShadowColor}}" />
        <Setter Property="local:PasswordBoxHelper.FocusedBorderBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.PasswordBoxFocusedBorderBrush}}" />
        <Setter Property="local:PasswordBoxHelper.CornerRadius"
                Value="{StaticResource {x:Static i:ResourceKeys.PasswordBoxCornerRadius}}" />
        <!--IconHelper-->
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <!--Property-->
        <Setter Property="BorderBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.PasswordBoxBorderBrush}}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource {x:Static i:ResourceKeys.PasswordBoxBorderThickness}}" />
        <Setter Property="Padding"
                Value="5,0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.PasswordBoxTemplate}}" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder x:Name="controlWithError" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="True">
                <Setter Property="local:PasswordBoxHelper.ValidationErrorTips"
                        Value="{Binding Path=(Validation.Errors)[0].ErrorContent,RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.FocusedCaretBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="CaretBrush"
                        Value="{Binding Path=(local:PasswordBoxHelper.FocusedCaretBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>
