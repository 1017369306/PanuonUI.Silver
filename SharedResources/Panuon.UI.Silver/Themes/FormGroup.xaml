<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/CheckBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="local:FormCustomGroup">
        <Setter Property="Height"
                Value="{Binding Path=(local:FormGroup.ItemsHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Orientation"
                Value="{Binding Path=(local:FormGroup.Orientation), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderMargin"
                Value="{Binding Path=(local:FormGroup.HeaderMargin), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderWidth"
                Value="{Binding Path=(local:FormGroup.HeaderWidth), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderHeight"
                Value="{Binding Path=(local:FormGroup.HeaderHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="IsRequired"
                Value="{Binding Path=(local:FormGroup.IsRequired), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <ContentPresenter Content="{Binding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FormCustomGroup">
                    <Border x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding HeaderWidth, Converter={StaticResource  {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel x:Name="StkHeader"
                                        Orientation="Horizontal"
                                        Margin="{TemplateBinding HeaderMargin}">
                                <TextBlock Foreground="Red"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding IsRequired, Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                    <Run Text="*" />
                                </TextBlock>
                                <ContentPresenter ContentSource="Header" />
                            </StackPanel>
                            <ContentPresenter Grid.Column="1"
                                     Margin="{TemplateBinding Padding}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding HeaderHeight, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthIsAbsoluteOrAutoConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                     Value="True">
                            <Setter TargetName="StkHeader"
                                    Property="Height"
                                    Value="{Binding HeaderHeight, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthStringToDoubleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <Setter TargetName="StkHeader"
                                    Property="VerticalAlignment"
                                    Value="Top" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:FormCustomGroup">
                            <Border x:Name="BdrMain"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{Binding HeaderHeight, Converter={StaticResource  {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <StackPanel x:Name="StkHeader"
                                                Orientation="Horizontal"
                                                Margin="{TemplateBinding HeaderMargin}">
                                        <TextBlock Foreground="Red"
                                                   VerticalAlignment="Center"
                                                   Visibility="{Binding IsRequired, Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                            <Run Text="*" />
                                        </TextBlock>
                                        <ContentPresenter ContentSource="Header" />
                                    </StackPanel>
                                    <ContentPresenter Grid.Row="1"
                                                      Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding HeaderWidth, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthIsAbsoluteOrAutoConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                             Value="True">
                                    <Setter TargetName="StkHeader"
                                            Property="Height"
                                            Value="{Binding HeaderWidth, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthStringToDoubleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                    <Setter TargetName="StkHeader"
                                            Property="HorizontalAlignment"
                                            Value="Left" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="local:FormTextGroup">
        <Setter Property="Height"
                Value="{Binding Path=(local:FormGroup.ItemsHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Orientation"
                Value="{Binding Path=(local:FormGroup.Orientation), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderMargin"
                Value="{Binding Path=(local:FormGroup.HeaderMargin), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderWidth"
                Value="{Binding Path=(local:FormGroup.HeaderWidth), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderHeight"
                Value="{Binding Path=(local:FormGroup.HeaderHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="IsRequired"
                Value="{Binding Path=(local:FormGroup.IsRequired), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="TextBoxStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Type TextBox}}" 
                       TargetType="TextBox"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <ContentPresenter Content="{Binding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FormTextGroup">
                    <Border x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding HeaderWidth, Converter={StaticResource  {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel x:Name="StkHeader"
                                        Orientation="Horizontal"
                                        Margin="{TemplateBinding HeaderMargin}">
                                <TextBlock Foreground="Red"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding IsRequired, Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                    <Run Text="*"/>
                                </TextBlock>
                                <ContentPresenter ContentSource="Header" />
                            </StackPanel>
                            <TextBox Grid.Column="1"
                                     Padding="{TemplateBinding Padding}"
                                     Text="{Binding Text,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     local:TextBoxHelper.Watermark="{TemplateBinding Watermark}"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Style="{TemplateBinding TextBoxStyle}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding HeaderHeight, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthIsAbsoluteOrAutoConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                     Value="True">
                            <Setter TargetName="StkHeader"
                                    Property="Height"
                                    Value="{Binding HeaderHeight, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthStringToDoubleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <Setter TargetName="StkHeader"
                                    Property="VerticalAlignment"
                                    Value="Top" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:FormTextGroup">
                            <Border x:Name="BdrMain"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{Binding HeaderHeight, Converter={StaticResource  {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <StackPanel x:Name="StkHeader"
                                                Orientation="Horizontal"
                                                Margin="{TemplateBinding HeaderMargin}">
                                        <TextBlock Foreground="Red"
                                                   VerticalAlignment="Center"
                                                   Visibility="{Binding IsRequired, Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                            <Run Text="*" />
                                        </TextBlock>
                                        <ContentPresenter ContentSource="Header" />
                                    </StackPanel>
                                    <TextBox Grid.Row="1"
                                             Padding="{TemplateBinding Padding}"
                                             Text="{Binding Text,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             local:TextBoxHelper.Watermark="{TemplateBinding Watermark}"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"
                                             Style="{TemplateBinding TextBoxStyle}"
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding HeaderWidth, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthIsAbsoluteOrAutoConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                             Value="True">
                                    <Setter TargetName="StkHeader"
                                            Property="Height"
                                            Value="{Binding HeaderWidth, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthStringToDoubleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                    <Setter TargetName="StkHeader"
                                            Property="HorizontalAlignment"
                                            Value="Left" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="local:FormCheckBoxGroup">
        <Setter Property="Height"
                Value="{Binding Path=(local:FormGroup.ItemsHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Orientation"
                Value="{Binding Path=(local:FormGroup.Orientation), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderMargin"
                Value="{Binding Path=(local:FormGroup.HeaderMargin), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderWidth"
                Value="{Binding Path=(local:FormGroup.HeaderWidth), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="HeaderHeight"
                Value="{Binding Path=(local:FormGroup.HeaderHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="IsRequired"
                Value="{Binding Path=(local:FormGroup.IsRequired), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="CheckBoxStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Type CheckBox}}"
                       TargetType="CheckBox" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <ContentPresenter Content="{Binding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FormCheckBoxGroup">
                    <Border x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding HeaderWidth, Converter={StaticResource  {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel x:Name="StkHeader"
                                        Orientation="Horizontal"
                                        Margin="{TemplateBinding HeaderMargin}">
                                <TextBlock Foreground="Red"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding IsRequired, Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                    <Run Text="*" />
                                </TextBlock>
                                <ContentPresenter ContentSource="Header" />
                            </StackPanel>
                            <CheckBox Grid.Column="1"
                                     Padding="{TemplateBinding Padding}"
                                     IsChecked="{Binding IsChecked,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     local:CheckBoxHelper.CheckedContent="{TemplateBinding CheckedContent}"
                                     Content="{TemplateBinding Content}"
                                     Style="{TemplateBinding CheckBoxStyle}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding HeaderHeight, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthIsAbsoluteOrAutoConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                     Value="True">
                            <Setter TargetName="StkHeader"
                                    Property="Height"
                                    Value="{Binding HeaderHeight, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthStringToDoubleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <Setter TargetName="StkHeader"
                                    Property="VerticalAlignment"
                                    Value="Top" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:FormCheckBoxGroup">
                            <Border x:Name="BdrMain"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{Binding HeaderHeight, Converter={StaticResource  {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <StackPanel x:Name="StkHeader"
                                                Orientation="Horizontal"
                                                Margin="{TemplateBinding HeaderMargin}">
                                        <TextBlock Foreground="Red"
                                                   VerticalAlignment="Center"
                                                   Visibility="{Binding IsRequired, Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                            <Run Text="*" />
                                        </TextBlock>
                                        <ContentPresenter ContentSource="Header" />
                                    </StackPanel>
                                    <CheckBox Grid.Row="1"
                                              Padding="{TemplateBinding Padding}"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              local:CheckBoxHelper.CheckedContent="{TemplateBinding CheckedContent}"
                                              Content="{TemplateBinding Content}"
                                              Style="{TemplateBinding CheckBoxStyle}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding HeaderWidth, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthIsAbsoluteOrAutoConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                             Value="True">
                                    <Setter TargetName="StkHeader"
                                            Property="Height"
                                            Value="{Binding HeaderWidth, Converter={StaticResource {x:Static i:ResourceKeys.GridLengthStringToDoubleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                    <Setter TargetName="StkHeader"
                                            Property="HorizontalAlignment"
                                            Value="Left" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
